#include "stdafx.h"
#include <iostream>
#include <stdexcept>
#include <string>

using namespace std;

class stack {
private: int array[10];
public:
	void push(int)
	{};
	int pop()
	{
		return 0;
	};
	int fetch()
	{
		return 0;
	};
	int size()
	{
		return 0;
	};
};

bool expect(string testname, bool result)
{
	cout << "Test: " << testname << ";";
	if (result == true)
		cout << " success" << endl;
	else
		cout << " fail" << endl;
	return 0;
};

void test1()
{
	string testname = "check overflow_error";
	stack s;
	bool result = false;
	try
	{
		for (int i = 0; i < 10; i++)
			s.push(i);
	}
	catch (overflow_error& ex)
	{
		result = true;
	}
	expect(testname, result);
};
void test2()
{
	string testname = "check underflow_error";
	stack s;
	bool result = false;
	try
	{
		for (int i = 0; i < 10; i++)
			s.pop();
	}
	catch (underflow_error& ex)
	{
		result = true;
	}
	expect(testname, result);
};
void test3()
{
	string testname = "check push 10";
	stack s;
	int value = 10;
	s.push(10);
	int value_ = s.pop();
	expect(testname, (value == value_));
};
void test4()
{
	string testname = "check pop value = ";
	stack s;
	for (int i = 9; i >= 0; i--)
	{
		string ntestname = testname + to_string(i);
		expect(ntestname, (i == s.pop()));
	}
};
void test5()
{
	string testname = "check fetch value = ";
	stack s;
	for (int i = 0; i < 10; i++)
	{
		s.push(i);
		string ntestname_ = testname + to_string(i);
		expect(ntestname_, (i == s.fetch()));
	}
}
void start_test()
{
	test1();
	test2();
	test3();
	test4();
	test5();
};

int main()
{
	start_test();
	return 0;
}
